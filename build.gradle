plugins {
    id 'java'
    id 'org.jetbrains.kotlin.jvm' version '1.6.20'
    id("xyz.jpenilla.run-paper") version "2.0.1"
}

group = 'net.ocejlot.jakashuinya'
version = '0.1-SNAPSHOT'

repositories {
    mavenCentral()
    maven {
        name = 'papermc-repo'
        url = 'https://repo.papermc.io/repository/maven-public/'
    }
    maven {
        name = 'sonatype'
        url = 'https://oss.sonatype.org/content/groups/public/'
    }
}

dependencies {
    compileOnly 'io.papermc.paper:paper-api:1.19.3-R0.1-SNAPSHOT'
    implementation 'org.jetbrains.kotlin:kotlin-stdlib:1.6.20'
}

compileKotlin {
    kotlinOptions {
        jvmTarget = sourceCompatibility
        freeCompilerArgs = ["-Xlambdas=indy"] // use LambdaMetafactory & invokedynamic for lambdas
    }
}

jar {
    from sourceSets.main.resources
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    from configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

def targetJavaVersion = 17
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release = targetJavaVersion
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}



runServer{
    minecraftVersion("1.19.3")
}
